on:
  push:
    branches:
    - main
    - features/**
    tags:
    - '*.*.*'
  pull_request:
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [macOS-latest, ubuntu-latest, windows-latest]
    name: ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    steps:
    - uses: actions/checkout@v2
    - name: ðŸ”¨ Use .NET Core 2.1 SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '2.1.x'
    - name: ðŸ”¨ Use .NET Core 3.1 SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    - name: ðŸª“ **DOTNET HACK** ðŸª“
      shell: pwsh
      run: |
          $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
          $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
          $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
          foreach ($dir in $directories) {
            $from = $dir.FullName;
            $to = "$root/$version";
            Write-Host Copying from $from to $to;
            Copy-Item "$from\*" $to -Recurse -Force;
          }
    - run: dotnet --info
    - uses: actions/checkout@af513c7a016048ae468971c52ed77d9562c7c819
    - if: contains(matrix.runs-on, 'windows')
      run: ./build.cmd
    - if: contains(matrix.runs-on, 'macOS') || contains(matrix.runs-on, 'ubuntu')
      run: ./build.sh
    - if: (matrix.runs-on == 'windows-latest') && (github.ref == 'refs/heads/main')
      run: dotnet nuget push .\artifacts\*.nupkg -s https://www.myget.org/F/identity/api/v2/package -k ${{ secrets.MYGET }}
